AWSTemplateFormatVersion: "2010-09-09"
Description: Practice 1
Transform:
  - AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs14.x
    Timeout: 30
    MemorySize: 1024
    Environment:
      Variables:
        USERNAME: Jordi
        NODE_OPTIONS: --enable-source-maps
        AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1

Resources:
  ###############################
  #### API GATEWAY          #####
  ###############################

  ApiGatewayRestApi2:
    Type: AWS::Serverless::Api
    Properties:
      StageName: 'develop'
      MinimumCompressionSize: 1024
      OpenApiVersion: '3.0.1'
      DefinitionBody:
        'Fn::Transform':
          Name: AWS::Include
          Parameters:
            Location: .dist/docs/swagger.yml

  AllowExecuteLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      RoleName: !Sub ${AWS::StackName}-api-execution-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-allow-execute-lambda-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${AWS::StackName}-*'


  ###############################
  ####   Dynamo Database    #####
  ###############################

  Dynamodb:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${AWS::StackName}-pms-dynamodb-table'
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      AttributeDefinitions:
        - AttributeName: partitionKey
          AttributeType: S
      KeySchema:
        - AttributeName: partitionKey
          KeyType: HASH

  ###############################
  ####      SQS   BUS       #####
  ###############################

  ProductProjectionQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${AWS::StackName}-product-projection-queue


  ###############################
  ####      LAMBDA         #####
  ###############################

  CreateProductLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-create-product-controller'
      Handler: create-product.handler
      CodeUri: .dist/webpack
      Environment:
        Variables:
          TABLE_NAME: !Sub '${AWS::StackName}-pms-dynamodb-table'
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: arn:aws:sqs:eu-west-1:327832251428:pms-ferran-pablo-product-projection-queue
            Enabled: true
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
              Resource:
                - !GetAtt Dynamodb.Arn
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource:
                - !Sub '${Dynamodb.Arn}/index/*'
            - Effect: Allow
              Action:
                - sqs:ReceiveMessage
                - sqs:PurgeQueue
                - sqs:DeleteQueue
              Resource:
                - arn:aws:sqs:eu-west-1:327832251428:pms-ferran-pablo-product-projection-queue

  PostControllerCartLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-post-cart-controller'
      Handler: post-cart-controller.handler
      CodeUri: .dist/webpack
      Environment:
        Variables:
          TABLE_NAME: !Sub '${AWS::StackName}-pms-dynamodb-table'
          QUEUE_URL: "https://sqs.eu-west-1.amazonaws.com/327832251428/backoffice-joel-patrick-generate-bill-sqs"
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
              Resource:
                - !GetAtt Dynamodb.Arn
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource:
                - !Sub '${Dynamodb.Arn}/index/*'

  PostCartProductControllerLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-post-cart-product-controller'
      Handler: post-cart-product-controller.handler
      CodeUri: .dist/webpack
      Environment:
        Variables:
          TABLE_NAME: !Sub '${AWS::StackName}-pms-dynamodb-table'
          QUEUE_URL: "https://sqs.eu-west-1.amazonaws.com/327832251428/backoffice-joel-patrick-generate-bill-sqs"
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
              Resource:
                - !GetAtt Dynamodb.Arn
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource:
                - !Sub '${Dynamodb.Arn}/index/*'

  PutCartBoughtLambda:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${AWS::StackName}-put-cart-bought-controller'
      Handler: put-cart-bought-controller.handler
      CodeUri: .dist/webpack
      Environment:
        Variables:
          TABLE_NAME: !Sub '${AWS::StackName}-pms-dynamodb-table'
          QUEUE_URL: "https://sqs.eu-west-1.amazonaws.com/327832251428/backoffice-joel-patrick-generate-bill-sqs"
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
              Resource:
                - !GetAtt Dynamodb.Arn
            - Effect: Allow
              Action:
                - dynamodb:Query
              Resource:
                - !Sub '${Dynamodb.Arn}/index/*'
            - Effect: Allow
              Resource: '*'
              Action:
                - events:PutEvents
            - Effect: Allow
              Action:
                - sqs:SendMessage
                - sqs:ReceiveMessage
              Resource:
                - arn:aws:sqs:eu-west-1:327832251428:backoffice-joel-patrick-generate-bill-sqs
