{"file":"/home/ferran/uni/computacio/nozoma-fork/src/contexts/shared/domain/bus/event/DomainEvent.ts","mappings":";;;;;;AAAA,mEAA2C;AAE3C,MAAsB,WAAW;IAa7B,YAAY,SAAiB,EAAE,WAAmB,EAAE,OAAgB,EAAE,UAAiB;QACnF,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,gBAAM,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,UAAU,GAAG,UAAU,IAAI,IAAI,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;IAC/B,CAAC;CAGJ;AArBD,kCAqBC","names":[],"sources":["/home/ferran/uni/computacio/nozoma-fork/src/contexts/shared/domain/bus/event/DomainEvent.ts"],"sourcesContent":["import UuidVo from '@shared/domain/UuidVo';\n\nexport abstract class DomainEvent {\n    static EVENT_NAME: string;\n\n    static fromPrimitives: (...args: any[]) => any;\n\n    readonly aggregateId: string;\n\n    readonly eventId: string;\n\n    readonly occurredOn: Date;\n\n    readonly eventName: string;\n\n    constructor(eventName: string, aggregateId: string, eventId?: string, occurredOn?: Date) {\n        this.aggregateId = aggregateId;\n        this.eventId = eventId || UuidVo.random().value;\n        this.occurredOn = occurredOn || new Date();\n        this.eventName = eventName;\n    }\n\n    abstract toPrimitives(): unknown;\n}\n\nexport type DomainEventClass = {\n    EVENT_NAME: string;\n    fromPrimitives(...args: any[]): DomainEvent;\n};\n"],"version":3}