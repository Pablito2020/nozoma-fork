{"file":"/home/ferran/uni/computacio/nozoma-fork/src/contexts/backoffice/commerces/app/create/CommerceCreator.ts","mappings":";;;;;AACA,8FAAsE;AAQtE,iFAAyD;AAEzD,MAAqB,eAAe;IAChC,YACa,IAAwB,EACxB,QAAkB;QADlB,SAAI,GAAJ,IAAI,CAAoB;QACxB,aAAQ,GAAR,QAAQ,CAAU;IAE/B,CAAC;IAED,KAAK,CAAC,GAAG,CACL,EAAU,EACV,IAAoB,EACpB,KAAc,EACd,WAAkC,EAClC,KAAc,EACd,OAAkB;QAElB,MAAM,QAAQ,GAAG,kBAAQ,CAAC,MAAM,CACxB,EAAE,EACF,IAAI,EACJ,KAAK,EACL,WAAW,EACX,KAAK,EACL,OAAO,CACV,EACD,CAAC,eAAe,EAAE,YAAY,CAAC,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC;YAChD,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC5B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC;SACzB,CAAC,CAAC;QACP,IAAI,eAAe,IAAI,YAAY,EAAE;YACjC,MAAM,IAAI,uBAAa,CAAC,mBAAmB,GAAG,EAAE,GAAG,YAAY,GAAG,KAAK,GAAG,iBAAiB,CAAC,CAAC;SAChG;QACD,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC/B,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC,CAAC;QACzD,OAAO,QAAQ,CAAC;IAEpB,CAAC;CAEJ;AApCD,kCAoCC","names":[],"sources":["/home/ferran/uni/computacio/nozoma-fork/src/contexts/backoffice/commerces/app/create/CommerceCreator.ts"],"sourcesContent":["import { CommerceRepository } from \"@backoffice-contexts/commerces/domain/CommerceRepository\";\nimport Commerce from \"@backoffice-contexts/commerces/domain/Commerce\";\nimport UuidVo from \"@shared/domain/UuidVo\";\nimport CommerceNameVo from \"@backoffice-contexts/commerces/domain/CommerceNameVo\";\nimport EmailVo from \"@shared/domain/EmailVo\";\nimport CommerceDescriptionVo from \"@backoffice-contexts/commerces/domain/CommerceDescriptionVo\";\nimport PhoneVo from \"@shared/domain/PhoneVo\";\nimport AddressVo from \"@shared/domain/AddressVo\";\nimport { EventBus } from \"@shared/domain/bus/event/EventBus\";\nimport AlreadyExists from \"@shared/domain/AlreadyExists\";\n\nexport default class CommerceCreator {\n    constructor(\n        readonly repo: CommerceRepository,\n        readonly eventBus: EventBus\n    ) {\n    }\n\n    async run(\n        id: UuidVo,\n        name: CommerceNameVo,\n        email: EmailVo,\n        description: CommerceDescriptionVo,\n        phone: PhoneVo,\n        address: AddressVo\n    ): Promise<Commerce> {\n        const commerce = Commerce.create(\n                id,\n                name,\n                email,\n                description,\n                phone,\n                address\n            ),\n            [commerceByEmail, commerceById] = await Promise.all([\n                this.repo.findByEmail(email),\n                this.repo.findById(id)\n            ]);\n        if (commerceByEmail || commerceById) {\n            throw new AlreadyExists(\"Commerce with id \" + id + \" or email \" + email + \" already exists\");\n        }\n        await this.repo.save(commerce);\n        await this.eventBus.publish(commerce.pullDomainEvents());\n        return commerce;\n\n    }\n\n}\n"],"version":3}