{"file":"/home/ferran/uni/computacio/nozoma-fork/src/contexts/backoffice/commerces/app/create/CommerceCreatorHandler.ts","mappings":";;;;;AACA,4HAAoG;AACpG,8HAAsG;AAGtG,mEAA2C;AAC3C,0GAAkF;AAClF,qEAA6C;AAC7C,wHAAgG;AAChG,qEAA6C;AAC7C,yEAAiD;AAEjD,MAAqB,sBAAsB;IAEvC,YAAoB,OAAwB;QAAxB,YAAO,GAAP,OAAO,CAAiB;IAC5C,CAAC;IAED,KAAK,CAAC,MAAM,CAAC,EACT,EAAE,EACF,WAAW,EACX,KAAK,EACL,KAAK,EACL,IAAI,EACJ,OAAO,EACa;QACpB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CACnC,IAAI,gBAAM,CAAC,EAAE,CAAC,EACd,IAAI,wBAAc,CAAC,IAAI,CAAC,EACxB,IAAI,iBAAO,CAAC,KAAK,CAAC,EAClB,IAAI,+BAAqB,CAAC,WAAW,CAAC,EACtC,IAAI,iBAAO,CAAC,KAAK,CAAC,EAClB,IAAI,mBAAS,CAAC,OAAO,CAAC,CACzB,CAAC;QACF,OAAO,IAAI,gCAAsB,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED,YAAY;QACR,OAAO,+BAAqB,CAAC;IACjC,CAAC;CAEJ;AA5BD,yCA4BC","names":[],"sources":["/home/ferran/uni/computacio/nozoma-fork/src/contexts/backoffice/commerces/app/create/CommerceCreatorHandler.ts"],"sourcesContent":["import { CommandHandler } from \"@shared/domain/bus/command/CommandHandler\";\nimport CreateCommerceCommand from \"@backoffice-contexts/commerces/app/create/CreateCommerceCommand\";\nimport CreateCommerceResponse from \"@backoffice-contexts/commerces/app/create/CreateCommerceResponse\";\nimport { Command } from \"@shared/domain/bus/command/Command\";\nimport CommerceCreator from \"@backoffice-contexts/commerces/app/create/CommerceCreator\";\nimport UuidVo from \"@shared/domain/UuidVo\";\nimport CommerceNameVo from \"@backoffice-contexts/commerces/domain/CommerceNameVo\";\nimport EmailVo from \"@shared/domain/EmailVo\";\nimport CommerceDescriptionVo from \"@backoffice-contexts/commerces/domain/CommerceDescriptionVo\";\nimport PhoneVo from \"@shared/domain/PhoneVo\";\nimport AddressVo from \"@shared/domain/AddressVo\";\n\nexport default class CommerceCreatorHandler implements CommandHandler<CreateCommerceCommand,\n    CreateCommerceResponse> {\n    constructor(private creator: CommerceCreator) {\n    }\n\n    async handle({\n        id,\n        description,\n        email,\n        phone,\n        name,\n        address\n    }: CreateCommerceCommand): Promise<CreateCommerceResponse> {\n        const response = await this.creator.run(\n            new UuidVo(id),\n            new CommerceNameVo(name),\n            new EmailVo(email),\n            new CommerceDescriptionVo(description),\n            new PhoneVo(phone),\n            new AddressVo(address)\n        );\n        return new CreateCommerceResponse(response);\n    }\n\n    subscribedTo(): Command {\n        return CreateCommerceCommand;\n    }\n\n}\n"],"version":3}