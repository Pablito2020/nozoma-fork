9cbb2e3782cff9060d76711a4ca00749
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const CreateCommerceCommand_1 = __importDefault(require("@backoffice-contexts/commerces/app/create/CreateCommerceCommand"));
const CreateCommerceResponse_1 = __importDefault(require("@backoffice-contexts/commerces/app/create/CreateCommerceResponse"));
const UuidVo_1 = __importDefault(require("@shared/domain/UuidVo"));
const CommerceNameVo_1 = __importDefault(require("@backoffice-contexts/commerces/domain/CommerceNameVo"));
const EmailVo_1 = __importDefault(require("@shared/domain/EmailVo"));
const CommerceDescriptionVo_1 = __importDefault(require("@backoffice-contexts/commerces/domain/CommerceDescriptionVo"));
const PhoneVo_1 = __importDefault(require("@shared/domain/PhoneVo"));
const AddressVo_1 = __importDefault(require("@shared/domain/AddressVo"));
class CommerceCreatorHandler {
    constructor(creator) {
        this.creator = creator;
    }
    async handle({ id, description, email, phone, name, address }) {
        const response = await this.creator.run(new UuidVo_1.default(id), new CommerceNameVo_1.default(name), new EmailVo_1.default(email), new CommerceDescriptionVo_1.default(description), new PhoneVo_1.default(phone), new AddressVo_1.default(address));
        return new CreateCommerceResponse_1.default(response);
    }
    subscribedTo() {
        return CreateCommerceCommand_1.default;
    }
}
exports.default = CommerceCreatorHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvZmVycmFuL3VuaS9jb21wdXRhY2lvL25vem9tYS1mb3JrL3NyYy9jb250ZXh0cy9iYWNrb2ZmaWNlL2NvbW1lcmNlcy9hcHAvY3JlYXRlL0NvbW1lcmNlQ3JlYXRvckhhbmRsZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFDQSw0SEFBb0c7QUFDcEcsOEhBQXNHO0FBR3RHLG1FQUEyQztBQUMzQywwR0FBa0Y7QUFDbEYscUVBQTZDO0FBQzdDLHdIQUFnRztBQUNoRyxxRUFBNkM7QUFDN0MseUVBQWlEO0FBRWpELE1BQXFCLHNCQUFzQjtJQUV2QyxZQUFvQixPQUF3QjtRQUF4QixZQUFPLEdBQVAsT0FBTyxDQUFpQjtJQUM1QyxDQUFDO0lBRUQsS0FBSyxDQUFDLE1BQU0sQ0FBQyxFQUNULEVBQUUsRUFDRixXQUFXLEVBQ1gsS0FBSyxFQUNMLEtBQUssRUFDTCxJQUFJLEVBQ0osT0FBTyxFQUNhO1FBQ3BCLE1BQU0sUUFBUSxHQUFHLE1BQU0sSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQ25DLElBQUksZ0JBQU0sQ0FBQyxFQUFFLENBQUMsRUFDZCxJQUFJLHdCQUFjLENBQUMsSUFBSSxDQUFDLEVBQ3hCLElBQUksaUJBQU8sQ0FBQyxLQUFLLENBQUMsRUFDbEIsSUFBSSwrQkFBcUIsQ0FBQyxXQUFXLENBQUMsRUFDdEMsSUFBSSxpQkFBTyxDQUFDLEtBQUssQ0FBQyxFQUNsQixJQUFJLG1CQUFTLENBQUMsT0FBTyxDQUFDLENBQ3pCLENBQUM7UUFDRixPQUFPLElBQUksZ0NBQXNCLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDaEQsQ0FBQztJQUVELFlBQVk7UUFDUixPQUFPLCtCQUFxQixDQUFDO0lBQ2pDLENBQUM7Q0FFSjtBQTVCRCx5Q0E0QkMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL2hvbWUvZmVycmFuL3VuaS9jb21wdXRhY2lvL25vem9tYS1mb3JrL3NyYy9jb250ZXh0cy9iYWNrb2ZmaWNlL2NvbW1lcmNlcy9hcHAvY3JlYXRlL0NvbW1lcmNlQ3JlYXRvckhhbmRsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tbWFuZEhhbmRsZXIgfSBmcm9tIFwiQHNoYXJlZC9kb21haW4vYnVzL2NvbW1hbmQvQ29tbWFuZEhhbmRsZXJcIjtcbmltcG9ydCBDcmVhdGVDb21tZXJjZUNvbW1hbmQgZnJvbSBcIkBiYWNrb2ZmaWNlLWNvbnRleHRzL2NvbW1lcmNlcy9hcHAvY3JlYXRlL0NyZWF0ZUNvbW1lcmNlQ29tbWFuZFwiO1xuaW1wb3J0IENyZWF0ZUNvbW1lcmNlUmVzcG9uc2UgZnJvbSBcIkBiYWNrb2ZmaWNlLWNvbnRleHRzL2NvbW1lcmNlcy9hcHAvY3JlYXRlL0NyZWF0ZUNvbW1lcmNlUmVzcG9uc2VcIjtcbmltcG9ydCB7IENvbW1hbmQgfSBmcm9tIFwiQHNoYXJlZC9kb21haW4vYnVzL2NvbW1hbmQvQ29tbWFuZFwiO1xuaW1wb3J0IENvbW1lcmNlQ3JlYXRvciBmcm9tIFwiQGJhY2tvZmZpY2UtY29udGV4dHMvY29tbWVyY2VzL2FwcC9jcmVhdGUvQ29tbWVyY2VDcmVhdG9yXCI7XG5pbXBvcnQgVXVpZFZvIGZyb20gXCJAc2hhcmVkL2RvbWFpbi9VdWlkVm9cIjtcbmltcG9ydCBDb21tZXJjZU5hbWVWbyBmcm9tIFwiQGJhY2tvZmZpY2UtY29udGV4dHMvY29tbWVyY2VzL2RvbWFpbi9Db21tZXJjZU5hbWVWb1wiO1xuaW1wb3J0IEVtYWlsVm8gZnJvbSBcIkBzaGFyZWQvZG9tYWluL0VtYWlsVm9cIjtcbmltcG9ydCBDb21tZXJjZURlc2NyaXB0aW9uVm8gZnJvbSBcIkBiYWNrb2ZmaWNlLWNvbnRleHRzL2NvbW1lcmNlcy9kb21haW4vQ29tbWVyY2VEZXNjcmlwdGlvblZvXCI7XG5pbXBvcnQgUGhvbmVWbyBmcm9tIFwiQHNoYXJlZC9kb21haW4vUGhvbmVWb1wiO1xuaW1wb3J0IEFkZHJlc3NWbyBmcm9tIFwiQHNoYXJlZC9kb21haW4vQWRkcmVzc1ZvXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbW1lcmNlQ3JlYXRvckhhbmRsZXIgaW1wbGVtZW50cyBDb21tYW5kSGFuZGxlcjxDcmVhdGVDb21tZXJjZUNvbW1hbmQsXG4gICAgQ3JlYXRlQ29tbWVyY2VSZXNwb25zZT4ge1xuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgY3JlYXRvcjogQ29tbWVyY2VDcmVhdG9yKSB7XG4gICAgfVxuXG4gICAgYXN5bmMgaGFuZGxlKHtcbiAgICAgICAgaWQsXG4gICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICBlbWFpbCxcbiAgICAgICAgcGhvbmUsXG4gICAgICAgIG5hbWUsXG4gICAgICAgIGFkZHJlc3NcbiAgICB9OiBDcmVhdGVDb21tZXJjZUNvbW1hbmQpOiBQcm9taXNlPENyZWF0ZUNvbW1lcmNlUmVzcG9uc2U+IHtcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCB0aGlzLmNyZWF0b3IucnVuKFxuICAgICAgICAgICAgbmV3IFV1aWRWbyhpZCksXG4gICAgICAgICAgICBuZXcgQ29tbWVyY2VOYW1lVm8obmFtZSksXG4gICAgICAgICAgICBuZXcgRW1haWxWbyhlbWFpbCksXG4gICAgICAgICAgICBuZXcgQ29tbWVyY2VEZXNjcmlwdGlvblZvKGRlc2NyaXB0aW9uKSxcbiAgICAgICAgICAgIG5ldyBQaG9uZVZvKHBob25lKSxcbiAgICAgICAgICAgIG5ldyBBZGRyZXNzVm8oYWRkcmVzcylcbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIG5ldyBDcmVhdGVDb21tZXJjZVJlc3BvbnNlKHJlc3BvbnNlKTtcbiAgICB9XG5cbiAgICBzdWJzY3JpYmVkVG8oKTogQ29tbWFuZCB7XG4gICAgICAgIHJldHVybiBDcmVhdGVDb21tZXJjZUNvbW1hbmQ7XG4gICAgfVxuXG59XG4iXSwidmVyc2lvbiI6M30=